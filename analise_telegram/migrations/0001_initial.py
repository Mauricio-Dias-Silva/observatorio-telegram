# Generated by Django 5.2.4 on 2025-08-12 13:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CanalTelegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do canal público no Telegram', max_length=255, unique=True)),
                ('username', models.CharField(blank=True, help_text='Username (@) do canal público', max_length=255, null=True, unique=True)),
                ('telegram_id', models.BigIntegerField(help_text='ID numérico do canal no Telegram (usado pela API)', unique=True)),
                ('link_convite', models.URLField(blank=True, help_text='Link público de convite do canal', max_length=500, null=True)),
                ('data_adicao', models.DateTimeField(auto_now_add=True, help_text='Data em que o canal foi adicionado ao monitoramento')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o monitoramento do canal está ativo')),
                ('ultimo_processamento', models.DateTimeField(blank=True, help_text='Timestamp do último processamento de mensagens deste canal', null=True)),
            ],
            options={
                'verbose_name': 'Canal do Telegram',
                'verbose_name_plural': 'Canais do Telegram',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MensagemTelegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem_id', models.BigIntegerField(help_text='ID único da mensagem dentro do canal no Telegram')),
                ('texto', models.TextField(blank=True, help_text='Conteúdo textual da mensagem', null=True)),
                ('data_publicacao', models.DateTimeField(help_text='Data e hora da publicação da mensagem no Telegram')),
                ('tipo_midia', models.CharField(blank=True, help_text='Tipo de mídia anexada à mensagem (e.g., photo, video, text, document)', max_length=50, null=True)),
                ('eh_risco', models.BooleanField(default=False, help_text='Indica se a mensagem foi classificada como de risco')),
                ('sentimento', models.CharField(blank=True, choices=[('positivo', 'Positivo'), ('neutro', 'Neutro'), ('negativo', 'Negativo')], help_text='Sentimento geral da mensagem (se aplicável)', max_length=20, null=True)),
                ('palavras_chave_encontradas', models.JSONField(blank=True, help_text='Lista de palavras-chave relevantes encontradas na mensagem', null=True)),
                ('canal', models.ForeignKey(help_text='Canal de onde a mensagem foi coletada', on_delete=django.db.models.deletion.CASCADE, related_name='mensagens', to='analise_telegram.canaltelegram')),
            ],
            options={
                'verbose_name': 'Mensagem do Telegram',
                'verbose_name_plural': 'Mensagens do Telegram',
                'ordering': ['-data_publicacao'],
                'unique_together': {('canal', 'mensagem_id')},
            },
        ),
    ]
